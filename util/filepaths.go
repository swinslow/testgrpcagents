// SPDX-License-Identifier: Apache-2.0 OR GPL-2.0-or-later
package util

import (
	"os"
	"path/filepath"
	"strings"
)

// GetFileTreeSlice returns a slice of all filenames within
// the requested directory tree.
func GetFileTreeSlice(dirRoot string) ([]string, error) {
	files := []string{}
	wf := func(path string, info os.FileInfo, err error) error {
		if err != nil {
			return err
		}
		if !info.IsDir() {
			files = append(files, path)
		}
		return nil
	}

	err := filepath.Walk(dirRoot, wf)
	if err != nil {
		return nil, err
	}

	return files, nil
}

// FilterFileTreeSlice takes a slice of filenames generated by
// GetFileTreeSlice, and filters out files that are not of interest.
func FilterFileTreeSlice(files []string) []string {
	filteredFiles := []string{}

	for _, filename := range files {
		splitFilename := strings.Split(filename, string(os.PathSeparator))

		// skip .git/ files
		if isInFilenameElements(".git", splitFilename) {
			continue
		}

		// if we get here, include in filtered files
		filteredFiles = append(filteredFiles, filename)
	}

	return filteredFiles
}

func isInFilenameElements(needle string, haystack []string) bool {
	for _, elt := range haystack {
		if needle == elt {
			return true
		}
	}
	return false
}
